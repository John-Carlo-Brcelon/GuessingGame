import random
import time
import os

# Word bank for each difficulty level
word_bank = {
    "Easy": ["cat", "dog", "fish", "bird", "car", "bus", "apple", "ball", "milk", "tree"],
    "Intermediate": ["horse", "table", "piano", "plant", "chair", "grapes", "flower", "bread", "ocean", "river"],
    "Hard": ["jacket", "rocket", "castle", "forest", "puzzle", "helmet", "island", "tunnel", "ladder", "engine"],
    "Difficult": ["complex", "journey", "rhythm", "python", "galaxy", "diamond", "quartz", "mystery", "plasma", "vacuum"]
}

def clear_screen():
    """
    Clears the console screen.
    """
    os.system('cls' if os.name == 'nt' else 'clear')

def generate_template(word):
    """
    Replaces random letters in the word with underscores.
    """
    revealed = random.sample(range(len(word)), max(1, len(word) // 2))
    return ''.join([word[i] if i in revealed else '_' for i in range(len(word))])

def play_level(level_name, words):
    """
    Plays one level of the game with 10 words and includes a 10-second timer for each word.
    """
    print(f"\n--- {level_name.upper()} LEVEL ---")
    score = 0
    time_limit = 10  # Time limit in seconds for each word

    for i in range(10):
        word = random.choice(words)
        words.remove(word)  # Avoid repeating words
        template = generate_template(word)
        
        print(f"\nWord {i + 1}: {template}")
        print(f"You have {time_limit} seconds to guess the word.")
        
        attempts = 5
        start_time = time.time()  # Record the start time
        timed_out = False  # Flag to track if time is up
        
        while attempts > 0:
            elapsed_time = time.time() - start_time
            if elapsed_time > time_limit:
                print("Time's up! You ran out of time.")
                timed_out = True
                break

            guess = input(f"Guess the word ({attempts} attempts left): ").strip().lower()
            clear_screen()  # Clear the screen after the user's input
            
            # Check time again immediately after input to handle boundary cases
            elapsed_time = time.time() - start_time
            if elapsed_time > time_limit:
                print("Time's up! You ran out of time.")
                timed_out = True
                break
            
            if guess == word and not timed_out:
                print("Correct!")
                score += 1
                break
            else:
                print("Wrong guess!")
                attempts -= 1
        
        if attempts == 0 or timed_out:
            print(f"The correct word was: {word}")
    
    print(f"\nScore for {level_name} Level: {score}/10")
    return score

def play_game():
    """
    Main function to play the Word Guessing Game.
    """
    print("Welcome to the Word Guessing Game!")
    print("Guess the words based on the hints provided.")
    
    total_score = 0
    while True:
        print("\nChoose a difficulty level:")
        print("1. Easy")
        print("2. Intermediate")
        print("3. Hard")
        print("4. Difficult")
        print("5. Exit Game")
        
        choice = input("Enter your choice (1-5): ").strip()
        clear_screen()  # Clear the screen after the user's input
        
        if choice == "5":
            print("\nThank you for playing! Goodbye!")
            break
        
        levels = {"1": "Easy", "2": "Intermediate", "3": "Hard", "4": "Difficult"}
        
        if choice in levels:
            level_name = levels[choice]
            while True:
                level_words = word_bank[level_name][:]  # Copy the word list to avoid modifying the original
                print(f"\nYou chose the {level_name} level.")
                
                # Play the selected level
                level_score = play_level(level_name, level_words)
                total_score += level_score
                
                print(f"Your current total score is: {total_score}")
                
                # Ask if the user wants to replay the level
                replay_level = input("Do you want to replay this level? (yes/no): ").strip().lower()
                clear_screen()  # Clear the screen after the user's input
                
                if replay_level == "no":
                    # Ask if the user wants to go back to the main menu
                    back_to_menu = input("Do you want to return to the main menu? (yes/no): ").strip().lower()
                    clear_screen()
                    
                    if back_to_menu == "yes":
                        break  # Return to the main menu
                    else:
                        # Ask if they want to exit
                        exit_game = input("Do you want to exit the game? (yes/no): ").strip().lower()
                        clear_screen()
                        
                        if exit_game == "yes":
                            print("\nThank you for playing! Goodbye!")
                            return
                        else:
                            print("Restarting current level...")
                elif replay_level != "yes":
                    print("Invalid input. Restarting current level...")
        else:
            print("Invalid choice. Please select a valid difficulty level.")
            clear_screen()  # Clear the screen after invalid input

# Run the game
play_game()
    